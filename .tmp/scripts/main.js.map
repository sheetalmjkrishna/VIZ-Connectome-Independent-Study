{"version":3,"sources":["main.js"],"names":["globalJSON","listOfFinalPaths","main","createGraph","data","t0","performance","now","graph","Graph","t1","console","log","nodeConstraints","edgeConstraints","$","nodeType","type","parent","find","val","push","RegExp","replace","split","map","Number","edgeType","paths","findPathsByRegex","length","mungedData","mungePathData","am","Adjacency_matrix","draw","getIntermediateNodeData","temp","path","i","nodes","id","maxCount","tempLastNodesTypes","label","slice","count","includes","Object","keys","sort","document","ready","on","show","hop_count","parseInt","filter_container","html","div","append","text","radio","attr","input","button","window","prop","is","closest","hide","modal","loadFileAsText","innerHTML","d3","json","error","fileToLoad","getElementById","files","fileReader","FileReader","onload","fileLoadedEvent","textFromFileLoaded","JSON","parse","target","result","edges","alert","readAsText"],"mappings":"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","file":"main.js","sourcesContent":["let globalJSON = [];\r\nlet listOfFinalPaths = [];\r\n\r\nfunction main() {\r\n    let createGraph = function(data) {\r\n        let t0 = performance.now();\r\n        let graph = new Graph(data);\r\n        let t1 = performance.now();\r\n        console.log('Created the graph in ' + (t1 - t0) + ' milliseconds.', graph);\r\n        t0 = performance.now();\r\n        let nodeConstraints = [];\r\n        let edgeConstraints = [];\r\n        for (let nodeType of $(\"input[id^='node']\")) {\r\n            let type = $(nodeType).parent().find(\"input[name^='input-type']:checked\").val();\r\n            if (type == \"regex\")\r\n                nodeConstraints.push(new RegExp($(nodeType).val() == \"\" ? \".*\" : $(nodeType).val().replace(/ *, */g, '|')));\r\n            else\r\n                nodeConstraints.push($(nodeType).val().split(',').map(Number));\r\n        }\r\n        for (let edgeType of $(\"input[id^='edge']\")) {\r\n            let type = $(edgeType).parent().find(\"input[name^='input-type']:checked\").val();\r\n            if (type == \"regex\")\r\n                edgeConstraints.push(new RegExp($(edgeType).val() == \"\" ? \".*\" : $(edgeType).val().replace(/ *, */g, '|')));\r\n            else\r\n                edgeConstraints.push($(edgeType).val().split(',').map(Number));\r\n        }\r\n        //let paths = graph.findPathsByRegex([new RegExp('CBb.*'), new RegExp('YAC Ai')], [new RegExp('.*')]);\r\n        let paths = graph.findPathsByRegex(nodeConstraints, edgeConstraints);\r\n        t1 = performance.now();\r\n        console.log('Found  ' + paths.length + ' paths in ' + (t1 - t0) + ' milliseconds.', paths)\r\n        listOfFinalPaths = paths;\r\n        let mungedData = mungePathData(listOfFinalPaths);\r\n        let am = new Adjacency_matrix(mungedData);\r\n        am.draw();\r\n    };\r\n    createGraph(globalJSON);\r\n}\r\n\r\nfunction getIntermediateNodeData(data) {\r\n    var temp = {};\r\n    for (let path of data.paths) {\r\n        for (let i = 1; i < path.nodes.length - 1; i++) {\r\n            if (path.nodes[i].id in temp) {\r\n                if (i in temp[path.nodes[i].id]) {\r\n                    temp[path.nodes[i].id][i] += 1;\r\n                } else {\r\n                    temp[path.nodes[i].id][i] = 1;\r\n                }\r\n            } else {\r\n                temp[path.nodes[i].id] = {};\r\n                temp[path.nodes[i].id][i] = 1;\r\n            }\r\n        }\r\n    }\r\n    return temp;\r\n}\r\n\r\nfunction mungePathData(data) {\r\n    let temp = {};\r\n    let maxCount = 0;\r\n    let tempLastNodesTypes = [];\r\n    for (let path of listOfFinalPaths) {\r\n        if (path.nodes[0].label in temp) { //source type exists\r\n            if (path.nodes.slice(-1)[0].label in temp[path.nodes[0].label]) { //dest type exists\r\n                temp[path.nodes[0].label][path.nodes.slice(-1)[0].label].paths.push(path);\r\n                temp[path.nodes[0].label][path.nodes.slice(-1)[0].label].count = temp[path.nodes[0].label][path.nodes.slice(-1)[0].label].paths.length;\r\n                maxCount = temp[path.nodes[0].label][path.nodes.slice(-1)[0].label].count > maxCount ? temp[path.nodes[0].label][path.nodes.slice(-1)[0].label].count : maxCount;\r\n            } else { //source type exists  but not dest type\r\n                if (!tempLastNodesTypes.includes(path.nodes.slice(-1)[0].label))\r\n                    tempLastNodesTypes.push(path.nodes.slice(-1)[0].label);\r\n                temp[path.nodes[0].label][path.nodes.slice(-1)[0].label] = {};\r\n                temp[path.nodes[0].label][path.nodes.slice(-1)[0].label].paths = [path];\r\n                temp[path.nodes[0].label][path.nodes.slice(-1)[0].label].count = 1;\r\n                maxCount = temp[path.nodes[0].label][path.nodes.slice(-1)[0].label].count > maxCount ? temp[path.nodes[0].label][path.nodes.slice(-1)[0].label].count : maxCount;\r\n            }\r\n        } else { //source type doesn't exist\r\n            if (!tempLastNodesTypes.includes(path.nodes.slice(-1)[0].label))\r\n                tempLastNodesTypes.push(path.nodes.slice(-1)[0].label);\r\n            temp[path.nodes[0].label] = {};\r\n            temp[path.nodes[0].label][path.nodes.slice(-1)[0].label] = {};\r\n            temp[path.nodes[0].label][path.nodes.slice(-1)[0].label].paths = [path];\r\n            temp[path.nodes[0].label][path.nodes.slice(-1)[0].label].count = 1;\r\n            maxCount = temp[path.nodes[0].label][path.nodes.slice(-1)[0].label].count > maxCount ? temp[path.nodes[0].label][path.nodes.slice(-1)[0].label].count : maxCount;\r\n        }\r\n    }\r\n    return {\r\n        \"nestedPaths\": temp,\r\n        \"sortedStartTypes\": Object.keys(temp).sort(),\r\n        \"sortedEndTypes\": tempLastNodesTypes.sort(),\r\n        \"maxCount\": maxCount\r\n    };\r\n}\r\n$(document).ready(function() {\r\n    $(\"#hop-count\").on(\"change\", function() {\r\n        $(\"#change-file\").show();\r\n        let hop_count = parseInt($(\"#hop-count\").val());\r\n        let filter_container = $(\"#filter-dropdowns\");\r\n        filter_container.html(\"\");\r\n        let i = 1;\r\n        for (i = 1; i <= hop_count; i++) {\r\n            let div = $(\"<div/>\");\r\n            div.append(\"<p/>\").text(\"Node \" + i + \" Type: \");\r\n            let label = $(\"<label/>\").text(\"Regex\");\r\n            let radio = $(\"<input/>\").attr({\r\n                \"name\": \"input-type-node\" + i,\r\n                \"value\": \"regex\",\r\n                \"type\": \"radio\",\r\n                \"checked\": \"checked\"\r\n            });\r\n            label.append(radio);\r\n            div.append(label);\r\n\r\n            label = $(\"<label/>\").text(\"Ids\");\r\n            radio = $(\"<input/>\").attr({\r\n                \"name\": \"input-type-node\" + i,\r\n                \"value\": \"ids\",\r\n                \"type\": \"radio\"\r\n            });\r\n            label.append(radio);\r\n            div.append(label);\r\n\r\n            let input = $(\"<input/>\").attr({\r\n                \"id\": \"node-\" + i,\r\n                \"type\": \"text\",\r\n                \"class\": \"form-control\"\r\n            });\r\n            div.append(input);\r\n            filter_container.append(div);\r\n            div = $(\"<div/>\");\r\n            div.append(\"<p/>\").text(\"Edge \" + i + \" Type: \");\r\n            label = $(\"<label/>\").text(\"Regex\");\r\n            radio = $(\"<input/>\").attr({\r\n                \"name\": \"input-type-edge\" + i,\r\n                \"value\": \"regex\",\r\n                \"type\": \"radio\",\r\n                \"checked\": \"checked\"\r\n            });\r\n            label.append(radio);\r\n            div.append(label);\r\n\r\n            label = $(\"<label/>\").text(\"Ids\");\r\n            radio = $(\"<input/>\").attr({\r\n                \"name\": \"input-type-edge\" + i,\r\n                \"value\": \"ids\",\r\n                \"type\": \"radio\"\r\n            });\r\n            label.append(radio);\r\n            div.append(label);\r\n            input = $(\"<input/>\").attr({\r\n                \"id\": \"edge-\" + i,\r\n                \"type\": \"text\",\r\n                \"class\": \"form-control\"\r\n            });\r\n            div.append(input);\r\n            filter_container.append(div);\r\n        }\r\n        let div = $(\"<div/>\");\r\n        div.append(\"<p/>\").text(\"Node \" + i + \" Type: \");\r\n        let label = $(\"<label/>\").text(\"Regex\");\r\n        let radio = $(\"<input/>\").attr({\r\n            \"name\": \"input-type-node\" + i,\r\n            \"value\": \"regex\",\r\n            \"type\": \"radio\",\r\n            \"checked\": \"checked\"\r\n        });\r\n        label.append(radio);\r\n        div.append(label);\r\n\r\n        label = $(\"<label/>\").text(\"Ids\");\r\n        radio = $(\"<input/>\").attr({\r\n            \"name\": \"input-type-node\" + i,\r\n            \"value\": \"ids\",\r\n            \"type\": \"radio\"\r\n        });\r\n        label.append(radio);\r\n        div.append(label);\r\n        let input = $(\"<input/>\").attr({\r\n            \"id\": \"node-\" + i,\r\n            \"type\": \"text\",\r\n            \"class\": \"form-control\"\r\n        });\r\n        div.append(input);\r\n        filter_container.append(div);\r\n        div = $(\"<div/>\");\r\n        let button = $(\"<button/>\").attr({\r\n            \"class\": \"btn btn-default\",\r\n            \"id\": \"get-paths\",\r\n            \"onclick\": \"main()\"\r\n        }).text(\"Get Paths\");\r\n        div.append(button);\r\n        filter_container.append(div);\r\n    });\r\n});\r\n$(window).on('load', function() {\r\n    $(\"#loadFile\").prop('disabled', true);\r\n    $(\"#loadSample\").on(\"change\", function() {\r\n        if ($(this).is(\":checked\")) {\r\n            $(\"#fileToLoad\").closest(\".col-md-4\").hide();\r\n            $(\"#loadFile\").prop('disabled', false);\r\n        } else {\r\n            $(\"#fileToLoad\").closest(\".col-md-4\").show();\r\n            if ($(\"#fileToLoad\").val().length > 1)\r\n                $(\"#loadFile\").prop('disabled', false);\r\n            else\r\n                $(\"#loadFile\").prop('disabled', true);\r\n        }\r\n    });\r\n    $(\"#fileToLoad\").on(\"change\", function() {\r\n        $(\"#fileName\").html($(\"#fileToLoad\").val().replace(\"C:\\\\fakepath\\\\\", \"\"));\r\n        $(\"#loadFile\").prop('disabled', false);\r\n    });\r\n    $('#myModal').modal('show');\r\n});\r\n\r\nfunction loadFileAsText() {\r\n    $(\"#adjacency_matrix_table\")[0].innerHTML = \"\";\r\n    $(\"#intermediate_node_table\")[0].innerHTML = \"\";\r\n    if ($(\"#loadSample\").is(\":checked\")) {\r\n        d3.json('assets/tiny-network.json', function(error, data) {\r\n            globalJSON = data;\r\n        });\r\n        $('#myModal').modal('hide');\r\n    } else {\r\n        let fileToLoad = document.getElementById(\"fileToLoad\").files[0];\r\n        let fileReader = new FileReader();\r\n        fileReader.onload = function(fileLoadedEvent) {\r\n            let textFromFileLoaded = JSON.parse(fileLoadedEvent.target.result);\r\n            if (textFromFileLoaded.nodes.length < 1 || textFromFileLoaded.edges.length < 1)\r\n                alert(\"Invalid File!\");\r\n            else {\r\n                globalJSON = textFromFileLoaded;\r\n                $('#myModal').modal('hide');\r\n            }\r\n\r\n        };\r\n        fileReader.readAsText(fileToLoad, \"UTF-8\");\r\n    }\r\n}"]}