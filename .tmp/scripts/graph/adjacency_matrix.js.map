{"version":3,"sources":["graph/adjacency_matrix.js"],"names":["Adjacency_matrix","data","nestedPaths","sortedStartTypes","sortedEndTypes","maxCount","table","d3","select","self","node","innerHTML","colorScale","scaleLinear","domain","range","columnHeaderRow","document","createElement","concat","forEach","d","i","th","appendChild","d1","i1","tr","td","attr","d2","i2","svg","createElementNS","g","rect","count","append","text","datum","on","console","log","intermediateNodeData","getIntermediateNodeData","Object","keys","length","it","Intermediate_table","draw"],"mappings":"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","file":"adjacency_matrix.js","sourcesContent":["class Adjacency_matrix {\r\n    constructor(data) {\r\n        this.nestedPaths = data.nestedPaths;\r\n        this.sortedStartTypes = data.sortedStartTypes;\r\n        this.sortedEndTypes = data.sortedEndTypes;\r\n        this.maxCount = data.maxCount;\r\n        this.table = d3.select(\"#adjacency_matrix_table\");\r\n\r\n    };\r\n    draw() {\r\n        let self = this;\r\n        self.table.node().innerHTML = \"\";\r\n        let colorScale = d3.scaleLinear()\r\n            .domain([0, self.maxCount])\r\n            .range([\"#e6ffff\", \"#00e6e6\"]);\r\n        let columnHeaderRow = document.createElement(\"tr\");\r\n        [\"\"].concat(self.sortedEndTypes).forEach(function(d, i) {\r\n            let th = document.createElement(\"th\");\r\n            th.innerHTML = d;\r\n            columnHeaderRow.appendChild(th);\r\n        });\r\n        self.table.node().appendChild(columnHeaderRow);\r\n        self.sortedStartTypes.forEach(function(d1, i1) {\r\n            let tr = document.createElement(\"tr\");\r\n            let td = document.createElement(\"td\");\r\n            td.innerHTML = d1;\r\n            d3.select(td).attr(\"style\", \"font-weight:bold;-webkit-min-logical-width:70px\");\r\n            tr.appendChild(td);\r\n            self.sortedEndTypes.forEach(function(d2, i2) {\r\n                let td = document.createElement(\"td\");\r\n                let svg = d3.select(document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\"))\r\n                    .attr(\"width\", 15)\r\n                    .attr(\"height\", 30);\r\n                let g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n                d3.select(g)\r\n                    .attr(\"style\", \"transform:translate(-7px,0px\");\r\n                let rect = d3.select(document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\"))\r\n                    .attr(\"fill\", colorScale((d2 in self.nestedPaths[d1]) ? self.nestedPaths[d1][d2].count : 0))\r\n                    .attr(\"y\", 10)\r\n                    .attr(\"x\", 10)\r\n                    .attr(\"height\", (d2 in self.nestedPaths[d1]) ? 10 : 0)\r\n                    .attr(\"width\", 10);\r\n                rect.append(\"title\")\r\n                    .text((d2 in self.nestedPaths[d1]) ? self.nestedPaths[d1][d2].count : 0);\r\n                rect.datum(d2 in self.nestedPaths[d1] ? self.nestedPaths[d1][d2] : []);\r\n                rect.on(\"click\", function(d) {\r\n                    console.log(d.count);\r\n                    let intermediateNodeData = getIntermediateNodeData(d)\r\n                    if (Object.keys(intermediateNodeData).length != 0) {\r\n                        let it = new Intermediate_table(intermediateNodeData);\r\n                        it.draw();\r\n                    }\r\n                });\r\n                g.appendChild(rect.node());\r\n                svg.node().appendChild(g);\r\n                td.append(svg.node());\r\n                tr.append(td);\r\n            });\r\n            self.table.node().appendChild(tr);\r\n        });\r\n    }\r\n}"]}